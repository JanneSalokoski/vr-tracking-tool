{"version":3,"sources":["store.js","API/API.js","UI/Components/Header/Header.js","UI/Elements/Button.js","SVG/symbol_close.js","UI/Elements/CloseButton.js","SVG/symbol_minify.js","UI/Elements/MinifyButton.js","SVG/symbol_expand.js","UI/Elements/ExpandButton.js","SVG/symbol_contextMenu.js","UI/Elements/ContextMenuButton.js","UI/Components/TrainView/TrainItem.js","UI/Components/TrainView/Autocomplete.js","UI/Components/Components.js","UI/Components/TrainView/TrainView.js","VrTrackingTool.js","serviceWorker.js","index.js"],"names":["initialState","counter","connected","trainSearchQuery","trains","liveTrains","filteredLiveTrains","trainSearch","stations","stationInfo","meta","version","majorVersion","minorVersion","releaseType","reducer","state","action","newState","type","query","data","trainObject","trainName","train","currentStation","station","Error","store","createContext","Provider","axios","require","default","MQTT","TimeTableEvent","this","scheduledTime","differenceInMinutes","liveEstimateTime","actualTime","Object","entries","length","Date","getTime","undefined","TimeTableRow","arrival","departure","stationShortCode","commercialStop","commercialTrack","Train","trainNumber","trainType","runningCurrently","timeTableRows","getTimeTableRowObjects","fromStation","toStation","elementStatus","reduce","result","value","index","array","push","map","row","API","getData","endpoint","callback","a","async","get","response","getTrains","train_number","departure_date","getTracking","getStationInfo","getLiveTrains","firstStation","lastStation","client","Client","topics","success","res","console","log","failure","err","connectionLost","messageArrived","msg","parseTopic","topic","split","messageTopic","subscription","topic_b","subscriptionTopic","level","level_a","level_b","every","item","connect","timeout","keepAliveInterval","useSSL","onSuccess","onFailure","onConnectionLost","onMessageArrived","error","subscribeToTopic","subscribe","disconnect","subscribeToTrainUpdates","Header","props","applicationState","useContext","dispatch","className","href","Button","disabled","onClick","children","SVG_symbol_close","viewBox","xmlns","fill-opacity","stroke-linecap","cx","cy","r","stroke-width","x1","y1","x2","y2","CloseButton","SVG_symbol_minify","SVG_symbol_expand","expandSymbol","stroke","d","unExpandSymbol","transform","expanded","fill","ContextMenuButton","formatTime","date","dateFormat","TrainItem","MinifyButton","ExpandButton","stationName","key","getTimeTableRow","AutocompleteItem","id","Autocomplete","items","Set","slice","Components","TrainView","useEffect","filter","match","RegExp","createNewTrain","tracking","newTrainObject","JSON","parse","payloadString","placeholder","onChange","event","target","autofocus","onFocus","onBlur","onKeyPress","trainItemElements","createTrainItemElements","VrTrackingTool","connectApplication","isConnected","Boolean","window","location","hostname","ReactDOM","render","useReducer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18b50c8b.chunk.js","sourcesContent":["import React, {createContext, useReducer} from 'react';\n\nconst initialState = {\n  counter: 0,\n  connected: false,\n  trainSearchQuery: \"\",\n  trains: {},\n  liveTrains: {},\n  filteredLiveTrains: [],\n  trainSearch: false,\n  stations: {},\n  stationInfo: {},\n  meta: {\n    version: {\n      majorVersion: 0,\n      minorVersion: 2,\n      releaseType: \"ALPHA\",\n    }\n  }\n};\n\nconst reducer = (state, action) => {\n  const newState = {...state}\n  switch (action.type) {\n    case 'CONNECTION_SUCCESFULL':\n      //console.log(\"Connected\");\n      newState.connected = true;\n      return newState;\n    case 'CONNECTION_FAILED':\n      newState.connected = false;\n      return newState;\n    case 'DISCONNECTED':\n      newState.connected = false;\n      return newState;\n    case 'TRAIN_SEARCH_QUERY_UPDATED':\n      newState.trainSearchQuery = action.query;\n      return newState;\n    case 'SET_STATION_INFO':\n      newState.stationInfo = action.data;\n      //console.log(action.data);\n      return newState;\n    case 'CREATE_TRAIN':\n      newState.trains[action.trainObject.trainName] = action.trainObject;\n      return newState;\n    case 'UPDATE_TRAIN':\n      newState.trains[action.trainObject.trainName] = action.trainObject;\n      return newState;\n    case 'TRACKING':\n      newState.trains[action.train].currentStation = action.data.station;\n      return newState;\n    case 'LIVE_TRAINS_UPDATED':\n      newState.liveTrains = action.data;\n      //console.log(action.data);\n      return newState;\n    case 'FILTERED_LIVE_TRAINS_UPDATED':\n      newState.filteredLiveTrains = action.data;\n      return newState;\n    case 'TRAIN_SEARCH_ACTIVE':\n      newState.trainSearch = true;\n      return newState;\n    case 'TRAIN_SEARCH_ENDED':\n      newState.trainSearch = false;\n      return newState;\n    default:\n      throw new Error();\n  }\n}\n\nconst store = createContext(initialState);\nconst {Provider} = store;\n\nconst DispatchProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (<Provider value={{state, dispatch}}>{children}</Provider>);\n}\n\nexport {store, DispatchProvider};\n","const axios = require(\"axios\").default; // Enables autocomplete!\n//const url = require('url');\n//const MQTT = require(\"async-mqtt\");\n\nconst MQTT = require(\"paho-mqtt\");\n\nclass TimeTableEvent {\n  constructor(data) {\n    this.scheduledTime = data.scheduledTime;\n    this.differenceInMinutes = data.differenceInMinutes ? data.differenceInMinutes : 0;\n    this.liveEstimateTime = data.actualTime || data.liveEstimateTime;\n\n    if (!this.liveEstimateTime & Object.entries(data).length > 0) {\n      this.liveEstimateTime = new Date(new Date(this.scheduledTime).getTime() + this.differenceInMinutes * 60000);\n      // console.log(this.liveEstimateTime)\n    }\n\n    if (!this.scheduledTime) {\n      this.differenceInMinutes = undefined;\n    }\n  }\n}\n\nclass TimeTableRow {\n  constructor(data) {\n    this.arrival = new TimeTableEvent(data.arrival);\n    this.departure = new TimeTableEvent(data.departure);\n\n    this.stationShortCode = data.arrival.stationShortCode || data.departure.stationShortCode;\n    this.commercialStop = data.arrival.commercialStop || data.departure.commercialStop;\n    this.commercialTrack = data.arrival.commercialTrack || data.departure.commercialTrack;\n    this.differenceInMinutes = data.arrival.differenceInMinutes || data.departure.differenceInMinutes;\n  }\n}\n\nclass Train {\n  constructor(data) {\n    this.trainNumber = data.trainNumber;\n    this.trainType = data.trainType;\n    this.trainName = `${this.trainType}${this.trainNumber}`;\n    this.runningCurrently = data.runningCurrently;\n\n    this.timeTableRows = this.getTimeTableRowObjects(data.timeTableRows);\n\n    this.fromStation = this.timeTableRows[0];\n    this.toStation = this.timeTableRows[this.timeTableRows.length - 1];\n\n    this.elementStatus = data.elementStatus;\n    this.currentStation = data.currentStation;\n  }\n\n  getTimeTableRowObjects(data) {\n    let groupedData = data.reduce((result, value, index, array) => {\n      if (index % 2 !== 0 && index > 0 && index < array.length - 1) {\n        result.push({arrival: array[index], departure: array[index + 1]});\n      }\n      else if (index === 0) {\n        result.push({arrival: {}, departure: array[index]});\n      }\n      else if (index === array.length - 1) {\n        result.push({arrival: array[index], departure: {}});\n      }\n\n      return result;\n    }, []);\n\n    return groupedData.map(row => new TimeTableRow(row));\n  }\n}\n\nconst API = {\n  // Rest API\n  getData: async (endpoint, callback) => {\n    try {\n      const response = await axios.get(`https://rata.digitraffic.fi/api/v1/${endpoint}`);\n      return response;\n    } catch (error) {\n      throw new Error(error);\n    }\n  },\n\n  getTrains: async (train_number, departure_date=\"latest\", version=0) => {\n    const response = await API.getData(`trains/${departure_date}/${train_number}?version=${version}`);\n    return new Train(response.data[0]);\n  },\n\n  getTracking: async (train_number, departure_date=\"latest\", version=0) => {\n    const response = await API.getData(`train-tracking/${departure_date}/${train_number}?version=${version}`)\n    return response.data[0];\n  },\n\n  getStationInfo: async () => {\n    const response = await API.getData(\"metadata/stations\");\n    const data = response.data.reduce((data, station) => (data[station.stationShortCode] = station, data), {});\n    return data;\n  },\n\n  getLiveTrains: async () => {\n    const response = await API.getData(\"live-trains\");\n    const data = response.data.map(train => ({\n      trainNumber: train.trainNumber,\n      trainType: train.trainType,\n      trainName: train.trainType + train.trainNumber,\n      firstStation: train.timeTableRows[0].stationShortCode,\n      lastStation: train.timeTableRows[train.timeTableRows.length-1].stationShortCode\n    }));\n\n    return data;\n  },\n\n\n  // MQTT WebSocket\n  MQTT: {\n    client: new MQTT.Client(\"rata.digitraffic.fi\", 443, \"js-utility-WDL4i\"),\n\n    topics: [],\n\n    success: (res) => console.log(\"Connected: \", res),\n    failure: (err) => console.log(\"Error: \", err),\n\n    connectionLost: res => console.log(\"Connection lost: \", res),\n    messageArrived: msg => {\n      const parseTopic = (topic) => topic.split(\"/\");\n\n      const levelMatches = (level_a, level_b) =>\n        (level_a === \"+\" || level_a === \"#\") ? true : (level_a === level_b) ? true : false;\n\n      const topicMatches = (topic_a, topic_b) =>\n        topic_a.map((level, index) => levelMatches(level, topic_b[index]));\n\n\n      //console.log(API.MQTT.topics);\n\n      let messageTopic = parseTopic(msg.topic);\n      API.MQTT.topics.map(subscription => {\n        let subscriptionTopic = parseTopic(subscription.topic);\n        let matches = topicMatches(subscriptionTopic, messageTopic);\n        //console.log(\"MATCHES: \", matches.every(item => item === true), subscriptionTopic, messageTopic)\n        if (matches.every(item => item === true)) {\n          subscription.callback(msg);\n        }\n      });\n    },\n\n    connect: (callback) => {\n\n      try {\n        API.MQTT.client.connect({\n          timeout: 3,\n          keepAliveInterval: 60,\n          useSSL: true,\n          onSuccess: (res) => callback({success: true, res: res}),\n          onFailure: (res) => callback({success: false, res: res})\n        });\n\n        API.MQTT.client.onConnectionLost = API.MQTT.connectionLost;\n        API.MQTT.client.onMessageArrived = API.MQTT.messageArrived;\n      }\n      catch (error) {\n        console.log(error);\n      }\n    },\n\n    subscribeToTopic: (topic, callback) => {\n      API.MQTT.topics.push({topic: topic, callback: callback});\n      API.MQTT.client.subscribe(topic);\n    }\n\n\n  },\n\n  disconnect: async (callback) => {\n    await API.MQTT.client.disconnect();\n    callback();\n  },\n\n  subscribeToTrainUpdates: async (trainObject, callback) => {\n\n  }\n};\n\nexport {Train, API};\n","import React, {useContext} from 'react';\nimport \"./Header.scss\";\n\nimport {store} from \"../../../store.js\";\n\n\nconst Header = (props) => {\n  const applicationState = useContext(store);\n  const {state, dispatch} = applicationState;\n\n  return (\n    <div className=\"module header\">\n      <h1 className=\"application-title\">VR Tracking Tool <span className=\"version\">{`[${state.meta.version.majorVersion}.${state.meta.version.minorVersion} ${state.meta.version.releaseType}]`}</span></h1>\n      <nav>\n        <span className=\"nav-item current\"><a href=\"trains\">Trains</a></span>\n        <span className=\"nav-item\"><a href=\"stations\">Stations</a></span>\n        <span className=\"nav-item\"><a href=\"stations\">About</a></span>\n        <span className=\"nav-item\"><a href=\"stations\">News</a></span>\n      </nav>\n      <div className=\"description\">\n        <h2></h2>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, {useContext} from 'react';\nimport \"./Buttons.scss\";\n\nfunction Button (props) {\n  return (\n    <button\n      className={props.className}\n      disabled={props.disabled}\n      onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\n\nfunction SVG_symbol_close() {\n  return(\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" className=\"SVG_symbol_close\">\n      <g fill-opacity=\"1\" stroke-linecap=\"round\">\n    \t\t<circle cx=\"50\" cy=\"50\" r=\"45\" stroke-width=\"5\"/>\n        <line x1=\"33\" y1=\"33\" x2=\"67\" y2=\"67\" stroke-width=\"15\" />\n    \t\t<line x1=\"33\" y1=\"67\" x2=\"67\" y2=\"33\" stroke-width=\"15\"/>\n      </g>\n    </svg>\n  );\n}\n\nexport default SVG_symbol_close;\n","import React from 'react';\nimport Button from \"./Button.js\";\n\nimport SVG_symbol_close from \"../../SVG/symbol_close.js\";\n\nimport \"./Buttons.scss\";\n\nfunction CloseButton (props) {\n  return (\n    <Button className=\"close\" onClick={props.callback}>\n      <SVG_symbol_close />\n    </Button>\n  );\n}\n\nexport default CloseButton;\n","import React from 'react';\n\nfunction SVG_symbol_minify() {\n  return(\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" className=\"SVG_symbol_minify\">\n      <g fill-opacity=\"1\" stroke-linecap=\"round\">\n        <circle cx=\"50\" cy=\"50\" r=\"45\" stroke-width=\"5\"/>\n        <line x1=\"28\" y1=\"50\" x2=\"72\" y2=\"50\" stroke-width=\"15\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default SVG_symbol_minify;\n","import React from 'react';\nimport Button from \"./Button.js\";\n\nimport SVG_symbol_minify from \"../../SVG/symbol_minify.js\";\n\nimport \"./Buttons.scss\";\n\nfunction CloseButton (props) {\n  return (\n    <Button className=\"minify\" onClick={props.callback}>\n      <SVG_symbol_minify />\n    </Button>\n  );\n}\n\nexport default CloseButton;\n","import React from 'react';\n\nfunction SVG_symbol_expand(props) {\n  const expandSymbol = (\n    <g fill-opacity=\"1\" stroke=\"#00cc00\">\n      <circle cx=\"50\" cy=\"50\" r=\"45\" stroke-width=\"5\" />\n      <path d=\"M33    25.5   L75.5   25.5    L75.5   67  Z\" stroke-width=\"0\" />\n      <path d=\"M25.5  33     L25.5   75.5    L67   75.5  Z\" stroke-width=\"0\" />\n    </g>\n  );\n\n  const unExpandSymbol = (\n    <g fill-opacity=\"1\" stroke=\"#00cc00\">\n  \t\t<circle cx=\"50\" cy=\"50\" r=\"45\" stroke-width=\"5\"/>\n      <path d=\"M33    25.5   L75.5   25.5    L75.5   67  Z\" stroke-width=\"0\" transform=\"rotate(180, 61.33, 39.33)\" />\n      <path d=\"M25.5  33     L25.5   75.5    L67   75.5  Z\" stroke-width=\"0\" transform=\"rotate(180, 39.33, 61.33)\" />\n    </g>\n  );\n\n  return (\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" className=\"SVG_symbol_expand\">\n      {props.expanded ? unExpandSymbol : expandSymbol}\n    </svg>\n  );\n}\n\nexport default SVG_symbol_expand;\n","import React from 'react';\nimport Button from \"./Button.js\";\n\nimport SVG_symbol_expand from \"../../SVG/symbol_expand.js\";\n\nimport \"./Buttons.scss\";\n\nfunction CloseButton (props) {\n  return (\n    <Button className=\"expand\" onClick={props.callback}>\n      <SVG_symbol_expand />\n    </Button>\n  );\n}\n\nexport default CloseButton;\n","import React from 'react';\n\nfunction SVG_symbol_minify() {\n  return(\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" className=\"SVG_symbol_minify\">\n      <g fill-opacity=\"1\" stroke=\"#dddddd\">\n        <circle cx=\"20\" cy=\"50\" r=\"10\" fill=\"#ffffff\" stroke-width=\"5\" />\n        <circle cx=\"50\" cy=\"50\" r=\"10\" fill=\"#ffffff\" stroke-width=\"5\" />\n        <circle cx=\"80\" cy=\"50\" r=\"10\" fill=\"#ffffff\" stroke-width=\"5\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default SVG_symbol_minify;\n","import React from 'react';\nimport Button from \"./Button.js\";\n\nimport SVG_symbol_contextMenu from \"../../SVG/symbol_contextMenu.js\";\n\nimport \"./Buttons.scss\";\n\nfunction ContextMenuButton (props) {\n  return (\n    <Button className=\"contextMenuButton\" onClick={props.callback}>\n      <SVG_symbol_contextMenu />\n    </Button>\n  );\n}\n\nexport default ContextMenuButton;\n","import React, {useContext} from 'react';\nimport dateFormat from \"dateformat\";\n\nimport Button from \"../../Elements/Button.js\";\nimport CloseButton from \"../../Elements/CloseButton.js\";\nimport MinifyButton from \"../../Elements/MinifyButton.js\";\nimport ExpandButton from \"../../Elements/ExpandButton.js\";\nimport ContextMenuButton from \"../../Elements/ContextMenuButton.js\";\n\nimport {store} from \"../../../store.js\";\n\nimport \"./TrainItem.scss\";\n\nconst formatTime = (date) => {\n  const timestampFormat = \"HH:MM\";\n  return (date) ? dateFormat(date, timestampFormat) : \"\";\n}\n\nconst TrainItem = (props) => {\n  const applicationState = useContext(store);\n  const {state, dispatch} = applicationState;\n\n  const getTimeTableRow = (row) => {\n\t\treturn (\n    <tr key={row.stationShortCode}\n      className={`row ${row.commercialStop ? \"STOP\" : \"PASS\"} ${(row.stationShortCode === props.data.currentStation && props.data.runningCurrently) ? \"currentStation\" : \"\"}`}>\n      <td className=\"stationShortCode\">{state.stationInfo[row.stationShortCode].stationName}</td>\n      <td className=\"commercialTrack\">{row.commercialTrack}</td>\n\n      <td className=\"arrival_time\">{formatTime(row.arrival.scheduledTime)}</td>\n      <td className=\"arrival_delay\">{row.arrival.differenceInMinutes}</td>\n      <td className=\"arrival_liveEstimateTime\">{formatTime(row.arrival.liveEstimateTime)}</td>\n\n      {props.data.runningCurrently ? (<td className=\"departure_time\">{formatTime(row.departure.scheduledTime)}</td>) : \"\"}\n      {props.data.runningCurrently ? (<td className=\"departure_delay\">{row.departure.differenceInMinutes}</td>) : \"\"}\n      {props.data.runningCurrently ? (<td className=\"departure_liveEstimateTime\">{formatTime(row.departure.liveEstimateTime)}</td>) : \"\"}\n    </tr>\n  )};\n\n  const getTimeTableRows = (rows) =>\n    rows.map(row => getTimeTableRow(row));\n\n  return(\n    <div className={\"TrainItem \" + props.data.elementStatus}>\n      <div className=\"controls\">\n        <CloseButton callback={() => console.log(\"Close\")} />\n        <MinifyButton callback={() => console.log(\"Minify\")} />\n        <ExpandButton expanded={false} callback={() => console.log(\"Toggle expansion\")} />\n      </div>\n      <div className=\"title\">{props.data.trainName}</div>\n      <div className=\"settings\">\n        <ContextMenuButton callback={() => {console.log(\"Open context menu\")}} />\n      </div>\n\n      <div className=\"o-d\">\n        <span className=\"startTime\">{`${formatTime(props.data.fromStation.departure.scheduledTime)}`}</span>\n        <span className=\"from\">{state.stationInfo[props.data.fromStation.stationShortCode].stationName}</span>\n        <span className=\"separator\"> → </span>\n        <span className=\"to\">{state.stationInfo[props.data.toStation.stationShortCode].stationName}</span>\n        <span className=\"endTime\">{`${formatTime(props.data.toStation.arrival.scheduledTime)}`}</span>\n      </div>\n\n      <div className=\"timetable\">\n        <table>\n          <thead>\n            <tr>\n              <th>Station</th>\n              <th>Track</th>\n\n              {props.data.runningCurrently ? (<th>Arrival time</th>) : (<th>Time</th>)}\n              {props.data.runningCurrently ? (<th>Arrival delay</th>) : (<th>Delay</th>)}\n              {props.data.runningCurrently ? (<th>Arrival estimate</th>) : (<th>Estimate</th>)}\n\n              {props.data.runningCurrently ? (<th>Departure time</th>) : \"\"}\n              {props.data.runningCurrently ? (<th>Departure delay</th>) : \"\"}\n              {props.data.runningCurrently ? (<th>Departure estimate</th>) : \"\"}\n\n            </tr>\n          </thead>\n          <tbody>\n            {getTimeTableRows(props.data.timeTableRows)}\n          </tbody>\n        </table>\n      </div>\n\n      <div className={\"status \" + (props.data.runningCurrently ? \"online\" : \"offline\")}>{props.data.runningCurrently ? \"ONLINE\" : \"OFFLINE\"}</div>\n\n      <div className=\"info\">\n        No additional info\n      </div>\n    </div>\n  );\n}\n\nexport default TrainItem;\n","import React, {useState, useContext} from 'react';\nimport \"./Autocomplete.scss\";\n\nimport { store } from '../../../store.js';\n\nfunction AutocompleteItem (props) {\n  const applicationState = useContext(store);\n  const {state, dispatch} = applicationState;\n\n  return (\n    <li className=\"AutocompleteItem\"\n    key={props.trainName} id={props.item.trainName}>\n      <span className=\"trainName\">{props.item.trainName}:</span>\n      <span className=\"from\">{state.stationInfo[props.item.firstStation].stationName}</span>\n      <span className=\"separator\">→</span>\n      <span className=\"to\">{state.stationInfo[props.item.lastStation].stationName}</span>\n    </li>\n  );\n}\n\nfunction Autocomplete (props) {\n  const applicationState = useContext(store);\n  const {state, dispatch} = applicationState;\n\n  const getAutocompleteItems = items =>\n    items.map(item => (<AutocompleteItem item={item} />));\n\n  return (\n    <div className=\"Autocomplete\">\n      {\n        state.trainSearch ? (\n          <ol className=\"AutocompleteItems\">\n            {props.items ? getAutocompleteItems([...new Set(props.items)].slice(0, 20)) : undefined}\n          </ol>\n        ) : undefined\n      }\n    </div>\n  );\n}\n\nexport default Autocomplete;\n","//Import all components\nimport Header from \"./Header/Header.js\";\nimport TrainView from \"./TrainView/TrainView.js\";\n\nconst Components = {\n  Header: Header,\n  TrainView: TrainView\n};\n\nexport default Components;\n","import React, {useContext, useEffect} from 'react';\n\nimport {API, Train} from \"../../../API/API.js\";\nimport { store } from '../../../store.js';\n\nimport TrainItem from \"./TrainItem.js\";\nimport Autocomplete from \"./Autocomplete.js\";\n\nimport \"./TrainView.scss\";\n\nconst TrainView = (props) => {\n  const applicationState = useContext(store);\n  const {state, dispatch} = applicationState;\n\n  const createTrainItemElements = (trains) => {\n    let trainItemElements = [];\n\n    for (let train in trains) {\n      trainItemElements.push((<TrainItem key={trains[train].trainName} data={trains[train]} />));\n    }\n\n    return trainItemElements;\n  }\n\n  async function getLiveTrains() {\n    const data = await API.getLiveTrains();\n    dispatch({type: \"LIVE_TRAINS_UPDATED\", data: data});\n  }\n\n  async function enterSearch(event) {\n    getLiveTrains();\n    dispatch({type: \"TRAIN_SEARCH_ACTIVE\"});\n  }\n\n  async function exitSearch(event) {\n    dispatch({type: \"TRAIN_SEARCH_ENDED\"});\n  }\n\n  const updateIdentifier = (event) => {\n    dispatch({type: \"TRAIN_SEARCH_QUERY_UPDATED\", query: event.target.value});\n    //const liveTrains = getLiveTrains();\n  }\n\n  async function handleKeyPresses (event) {\n    if (event.key === \"Enter\") {\n      createNewTrain();\n      dispatch({type: \"TRAIN_SEARCH_QUERY_UPDATED\", query: \"\"});\n    }\n  }\n\n  useEffect(() => {\n    if (Object.entries(state.liveTrains).length > 1) {\n      let filteredLiveTrains = state.liveTrains.filter(train =>\n        train.trainName.match(new RegExp(state.trainSearchQuery, \"g\")));\n\n      dispatch({type: \"FILTERED_LIVE_TRAINS_UPDATED\", data: filteredLiveTrains});\n    }\n  }, [state.trainSearchQuery])\n\n  const createNewTrain = async () => {\n    const train = await API.getTrains(state.trainSearchQuery);\n    dispatch({type: \"CREATE_TRAIN\", trainObject: train});\n\n    const tracking = await API.getTracking(state.trainSearchQuery);\n    dispatch({type: \"TRACKING\", train: train.trainName, data: tracking});\n\n    API.MQTT.subscribeToTopic(`trains/+/${train.trainNumber}/#`, (msg) => {\n      //console.log(JSON.parse(msg.payloadString));\n      let newTrainObject = new Train(JSON.parse(msg.payloadString));\n      dispatch({type: \"UPDATE_TRAIN\", trainObject: newTrainObject});\n    });\n\n    API.MQTT.subscribeToTopic(`train-tracking/+/${train.trainNumber}/#`, (msg) =>\n      dispatch({type: \"TRACKING\", train: train.trainName, data: JSON.parse(msg.payloadString)})\n    );\n  }\n\n  return(\n    <div className=\"module TrainView\">\n      <div className=\"search\">\n        <div className=\"searchBar\">\n          <input className=\"trainSearchBar\" type=\"text\" placeholder=\"trainNumber\" onChange={updateIdentifier} autofocus=\"true\" onFocus={enterSearch} onBlur={exitSearch} value={state.trainSearchQuery} onKeyPress={handleKeyPresses}/>\n          <input className=\"trainSearchSubmit\" type=\"button\" onClick={createNewTrain} value=\"Create train\"></input>\n        </div>\n        <Autocomplete items={state.filteredLiveTrains} />\n      </div>\n      <div className=\"trainList\">\n        {createTrainItemElements(state.trains)}\n      </div>\n    </div>\n  );\n}\n\nexport default TrainView;\n","import React, {useContext, useEffect} from 'react';\nimport './main.scss';\nimport {API} from \"./API/API.js\";\n\nimport {store} from \"./store.js\";\n\nimport Components from \"./UI/Components/Components.js\";\n\nfunction VrTrackingTool() {\n  const applicationState = useContext(store);\n  const {state, dispatch} = applicationState;\n\n  const connectClient = () => {\n    API.MQTT.connect((res) => {\n      if (res.success) {\n        dispatch({type: \"CONNECTION_SUCCESFULL\"});\n      } else {\n        dispatch({type: \"CONNECTION_FAILED\"});\n      }\n    });\n  }\n\n  const connectApplication = () => {\n    if (!state.connected) {\n      API.MQTT.client.isConnected() ? dispatch({type: \"CONNECTION_SUCCESFULL\"}) : connectClient();\n    }\n  };\n\n  const getStationInfo = async () => {\n    const stationInfo = await API.getStationInfo();\n    dispatch({type: \"SET_STATION_INFO\", data: stationInfo});\n  }\n\n  const init = async () => {\n    connectApplication();\n  }\n\n  useEffect(() => {\n    if (state.connected) {\n      getStationInfo();\n    }\n  }, [state.connected]);\n\n  // Run init only when loading app for the first time\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <div className=\"vr-tracking-tool\">\n      <Components.Header />\n      <input type=\"button\" value=\"Connect\" onClick={connectApplication} />\n      <input type=\"button\" value=\"Disconnect\" onClick={() => API.disconnect(() => {dispatch({type: \"DISCONNECTED\"})})} />\n      <Components.TrainView />\n    </div>\n  );\n}\n\nexport default VrTrackingTool;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport {DispatchProvider} from './store.js';\nimport VrTrackingTool from './VrTrackingTool';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<DispatchProvider><VrTrackingTool /></DispatchProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}